
管理员复制文件到容器
sudo docker cp /home/xiaozy/mark-0.0.1-SNAPSHOT.jar mark-service3:/

管理员重启容器
sudo docker restart mark-service3

管理员查看容器的日志
sudo docker logs -f -n 100 mark-service3

管理员进入正在运行的容器
sudo docker exec -it 3114014341af /bin/bash

查看容器文件
ls -l

列出所有容器（包括停止的）
docker ps -a


windows下，下载官方的docker desktop安装即可使用docker。再安装Windows WSL 貌似是优化虚拟机
docker run会自动下载镜像，不用写下载代码


redis
docker run --name redis -p 6379:6379 -d redis:5.0

mysql
docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:8.0.26

nacos
docker run -d --name nacos -p 8848:8848 -p 9848:9848 -p 9849:9849 -e MODE=standalone nacos/nacos-server:2.0.3
注意，nacos2.0.1版本新增了两个端口，所以8848、9848、9849，共三个端口需要映射


查看日志
docker logs mysql

实时查看日志
docker logs -f mysql

docker logs -f -n 100 mark-service3

查询30分钟内的日志
docker logs --since 30m mysql

停止容器
docker stop mysql

启动容器
docker start mysql

查看所有容器
docker ps -a

查看启动中的容器
docker ps

删除容器
docker rm mysql

进入容器
docker exec -it mysql bash

退出容器
exit

查看端口是否在使用
netstat -ano|findStr 8848

删除镜像
docker rmi e9c354083de7

查看Docker系统信息
docker info

==== 部署 Java 项目到 Docker 的基本步骤和命令

1. 准备 Dockerfile
# 使用官方的 OpenJDK 镜像作为基础镜像
FROM openjdk:17-jdk-alpine

# 设置工作目录
WORKDIR /app

# 将打包好的 JAR 文件复制到容器中
COPY target/order.jar /app/order.jar

# 暴露应用运行的端口（假设是8080）
EXPOSE 8080

# 启动命令
ENTRYPOINT ["java", "-jar", "/app/order.jar"]

2. 构建 Docker 镜像
docker build -t order-app:latest .

3. 运行 Docker 容器
（可选）不挂载数据
docker run -d --name order-app -p 8080:8080 order-app:latest
（可选）挂载卷以持久化数据或配置
docker run -d --name order-app -p 8080:8080 -v /path/to/logs:/app/logs order-app:latest
（可选）设置环境变量
docker run -d --name order-app -p 8080:8080 -e SPRING_PROFILES_ACTIVE=prod order-app:latest

4. 重启 Docker 容器
docker restart order-app


