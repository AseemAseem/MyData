
分类：MES重构的问题

问题：原来的有些表数据量太大，1亿到3亿
方法：分表，按年、按月分拆分表，分成当前表和历史表

问题：jdk版本是1.8
方法：升级成jdk17
<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <java.version>17</java.version>
        <!-- spring cloud alibaba 版本 -->
        <spring.cloud.alibaba.version>2022.0.0.0-RC1</spring.cloud.alibaba.version>
        <!-- spring cloud版本 -->
        <spring-cloud.version>2022.0.0</spring-cloud.version>
        <hutool.version>5.8.18</hutool.version>
        <pagehelper.version>5.3.2</pagehelper.version>
        <springboot-admin.version>3.0.2</springboot-admin.version>
        <mybatis-plus.version>3.5.3.1</mybatis-plus.version>
        <fastjson.version>1.2.83</fastjson.version>
        <maven-plugin-plugin.version>3.4</maven-plugin-plugin.version>
        <knife4j-openapi3.version>4.0.0</knife4j-openapi3.version>
        <mybatis.version>3.0.1</mybatis.version>
        <javax.version>4.0.1</javax.version>
        <commons-io.version>2.11.0</commons-io.version>
        <logstash.version>7.3</logstash.version>
</properties>

问题：原来不是springcloud alibaba项目
方法：引入公共包（alibaba、mybatis、swagger、logstash等等），去除多余springboot依赖，变成springcloud alibaba项目

问题：binlog配置的内存不够大，复制失败，分表时有的表有两三亿数据。
方法：调大或关闭binlog日志。

问题：旧代码有50多g的缓存，用于报表查询
方法：根据业务改成统计表实现

问题：生产环境不能调试
方法：用wireshark等抓包和kibana看日志看传参等信息

问题：复盘 回顾 如何有效回顾，总结经验教训
方法：
找出可以提前做，提高效率，降低风险的地方
复盘，找出为什么出现这个问题
往后这种问题，靠我们自己能做啥

吐槽会，总结整个期间项目优缺点
    内部、外部、前端、后端、产品、测试、运维、加班、经费等等


问题：碰到上游数据导致不好测试的问题
方法：开发、产品、上游拉一个小群，专门解决这个问题

问题：难度低，最重要的是如何写文档呈现出来。docker转k8s时，出现某个服务每小时重启的情况。
排查原因：
	主要是启动脚本服务内存比例太小，由1/2改为3/4即可
	接口调用频繁，老机器频繁通知，保证业务正常情况下限流

限流方法：配置文件配置，uri、每N秒允许通过1次请求

限流信息使用caffeine，一种带有存储和移除策略的Map，由Guava改进而来的高性能本地缓存，将通过给定的配置，自动移除“不常用”的数据，以保持内存的合理占用

本地测试方法：写java程序测试，测试请求和响应数量，对比下限流是否成功

结果：日请求7千万降低到1千万这样。其他有的接口20w一分钟限流到7万一分钟这样

mysql主从，深圳主库 越南从库 主从同步失败
新增会同步但是修改不会，跟同步策略有关系

电商mall-多数据源下事务
@DSTransactional com.baomidou.dynamic.datasource.annotation

电商mall mq改订单为已发货，后面看，订单状态还是待发货
订单已发货后还有收到微信支付完成的消息，mq会改订单为待发货

mes系统，excel导出乱码
使用了@RequestBody导致

mes系统，多线程解析bom树形结构，自定义线程池工具类，callable
erp的bom结构 20分钟 到 3分钟

技术方案定型
选型前提：知道、搜集到相关需求，核心需求是否满足
选型：第一：优先参考头部厂商，第二：搜索相关文档 第三：完善度，体系，时效性，扩展性

小程序商城支付
问题：微信支付金额比实际收到金额少，原因是银行卡使用立减优惠，最终发现用错字段了，


-- 如何做决策
    让他们都描述好自个观点，列出优劣势。优劣势区分不出来则让他们更详细说观点，选整体逻辑更清晰、细节更明确的。但是做决策时要这样回复，前期先按aaa的做，但是后期要考虑bbb的，散会。

-- mes越南工厂停电重启恢复问题：
来电--重启nacos集群--无法通过控制台管理集群--网络问题--车间交换机断电--恢复电力，网络恢复--nacos重启失败--k8s node节点时间不对--同步时间--nacos还是无法恢复（运维是k8s+etcd部署，etcd有脏数据导致集群k8s有问题）--两路走，一部分运维人员恢复旧集群，一部分创建新集群--恢复旧k8s集群，服务恢复


--redis集群，数据重复问题：
人资开发用的redis集群，所有数据重复出现三次，新增的key也是显示三次，删除一个，另外两个还在，并且刷新后能查询出来。
一会新增的key又正常了，但是历史数据还是三个。
有一个redis数据分片有问题

--大数据startRockets 同步mysql数据（同步10g数据进startRockets100秒左右），极速查询分析。存算分离架构。
--flink
 用于数据恢复，mysql数据恢复到elasticsearch，方便快捷（ai标注系统断电后丢数据，用的此方法恢复）
 大数据，可支持各种存储库数据同步，主流数据库都支持，sqlserver、mysql、kafka等。整库同步目前版本只支持部分数据库。

-- 电商小程序，多数据源事务，使用注解@DSTransactional